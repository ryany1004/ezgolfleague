<%= simple_form_for [@tournament.league, @tournament, @tournament_day, @contest] do |f| %>
  <% if notification = f.error_notification %>
    <div class="alert alert-error fade in">
      <a class="close" data-dismiss="alert" href="#">&times;</a>
      <%= notification %>
    </div>
  <% end %>

  <legend><%= @tournament_day.pretty_day(true) %>Contest Details</legend>

  <h3>Basic Details</h3>
  <div class="well">
	  <%= f.input :name, :label => 'Name', hint: 'i.e. Closest to the Pin', required: true %>

    <%= f.input :is_opt_in, :label => 'Contest is Opt-In' %>

    <% if @contest.new_record? -%>
      <%= f.input :contest_type, :label => 'Contest Type', collection: @contest_types, as: :radio_buttons, label_method: :name, value_method: :value %>
    <% end -%>
  </div>

  <div class="well">
    <p><b>Gross Skins</b> This contest is automatically calculated by the system. A skin is won by a player who posts the lowest score on a hole among all players in the game. The low score must be unique among all scores (no ties). There are potentially 18 skins in an 18 hole match. Gross scores are used in this contest.</p>

    <p><b>Net Skins</b> This contest is automatically calculated by the system. Same as Gross Skins except net scores are used in this contest.</p>

    <p><b>Net Skins + Gross Birdies</b> This contest is automatically calculated by the system. Same as Net Skins with the addition of all gross birdies also count as a skin.</p>

    <p><b>Gross Low</b> This contest is automatically calculated by the system. This contest takes the lowest gross score as the winner.</p>

    <p><b>Net Low</b> This contest is automatically calculated by the system. This contest takes the lowest net score as the winner.</p>

    <p><b>Custom: by Hole</b> This contest is manually awarded by the admin. You can select the holes that will be considered for this tournament. After the round the admin can manually select the winners for each hole.</p>

    <p><b>Custom: Overall Winner</b> This contest is manually awarded by the admin. You can manually award a winner for contests that do not need to be calculated from the scorecard (ie long drive).</p>
  </div>

  <% if @contest.new_record? == false && @contest.contest_type == 1 -%>
    <% if @contest.course_holes.count == 0 -%>
    <h3>Please Select Course Holes</h3>
    <div class="well">
        <%= f.association :course_holes, collection: @tournament_day.course.course_holes, :label => 'Which holes are included?', :label_method => :name, as: :check_boxes %>
    </div>
    <% end -%>
  <% end -%>

  <% if @contest.new_record? == false && @contest.contest_type >= 2 -%>
    <h3>Please Specify Entry Dues</h3>
    <div class="well">
        <%= f.input :dues_amount, :label => 'Dues Amount ($)' %>
    </div>

    <% if @contest.allows_overall_winner_points_and_payouts? -%>
      <h3>Overall Winner Payout & Points</h3>
      <p>Specifying a payout amount will override the automatic distribution of entry dues to the winner.</p>
      <div class="well">
          <%= f.input :overall_winner_payout_amount, :label => 'Payout Amount ($)' %>

          <%= f.input :overall_winner_points, :label => 'Points' %>
      </div>
    <% end -%>
  <% end -%>

  <div class="form-actions">
    <% if @contest.new_record? || !params[:skip_to_complete].blank? -%>
      <%= f.button :submit, "Save & Create Another Contest", :class => 'btn btn-default' %>
      <% if @tournament.tournament_days.count == 1 -%>
        <%= f.button :submit, "Save & Continue", :class => 'btn btn-primary' %>
      <% else -%>
        <%= f.button :submit, "Save & Continue to Next Day", :class => 'btn btn-primary' %>
      <% end -%>
    <% else -%>
      <%= f.button :submit, "Save", :class => 'btn btn-default' %>
    <% end -%>
  </div>
<% end %>
