<script>
  ezglTrackAnalyticsEvent("Viewed player tournament signup", { tournament_id: "<%= @tournament.id %>", tournament: "<%= @tournament.name %>" });
</script>

<ol class="breadcrumb">
  <li><%= link_to "Tournaments", league_tournaments_path(current_user.selected_league) %></li>
  <li><%= link_to @tournament.name, edit_league_tournament_path(current_user.selected_league, @tournament) %></li>
  <li class="active"><%= @tournament_day.pretty_day(true) %>Signups</li>
</ol>

<%= render partial: '/shared/tournaments/manage', locals: {tournament: @tournament, stage: @stage_name} %>

<%= render partial: 'multi_day_scheduling', locals: {tournament: @tournament, tournament_day: @tournament_day, schedule_options: @schedule_options} %>

<% if @tournament.league_season.is_teams? && !@tournament.is_finalized %>
	<div class="well">
		<h4>Copy Team Players to Tee Groups</h4>

		<p>This is part of a league using teams - schedule your players into the available tee groups. This action will take the selected members from the various teams and assign them to tee groups. We <strong>recommend</strong> you add players this way vs. adding them by hand as this will ensure all players are added.</p>

    <p>
      <%= link_to 'Copy Players from Team Setup to Tee Groups', league_tournament_tournament_day_team_configuration_path(@tournament.league, @tournament, @tournament_day), class: 'btn btn-success', method: :patch %>
    </p>
	</div>
<% end %>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title"><%= @tournament_day.pretty_day(true) %> Register Players</h3>
  </div>
  <div class="panel-body">
    <% if @tournament.mandatory_individual_scoring_rules.size > 0 %>
      <p>Choose players for each slot per tee-group to register them for this tournament. Players may already appear if they registered themselves.</p>

      <p>Players will be added to the following game types automatically:</p>
      <ul>
        <% @tournament.mandatory_individual_scoring_rules.each do |rule| %>
          <li><%= rule.name %></li>
        <% end %> 
      </ul>
    <% end %>
  </div>

  <% @tournament_groups.each do |tournament_group| %>
    <!-- TG: <%= tournament_group.id %> -->
    <%= simple_form_for :player_submit, url: league_tournament_update_day_players_path(@tournament.league, @tournament, @tournament_day, tournament_group), remote: true, html: { class: '.form-inline' } do |f| %>
    <table class="table table-striped sortable-table" id="<%= tournament_group.id %>">
      <thead>
        <tr>
          <th>&nbsp;</th>
          <th>Tee-Group: <%= tournament_group.formatted_tee_time %></th>
          <th>
          	<% if @tournament_day.daily_teams.present? && tournament_group.max_number_of_players != @tournament_day.scorecard_base_scoring_rule.users_per_daily_team %>
          		Pairing
          	<% else %>
	          	&nbsp;
          	<% end %>	
          </th>
          <th><% if @tournament_day.optional_scoring_rules.count > 0 %>Other Games<% else %>&nbsp;<% end %></th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody class="connectedSortable">
        <%
          if tournament_group.golf_outings.count > tournament_group.max_number_of_players.abs
            @count = tournament_group.golf_outings.count
          else
            @count = tournament_group.max_number_of_players.abs
          end
        %>
        <% @count.times.each_with_index do |item, i| %>
          <tr>
            <td width="5%">
              <span class="glyphicon glyphicon-menu-hamburger"></span>
            </td>
            <td id="user-select" class="user-select">
              <% if tournament_group.user_for_index(i).try(:id) %>
                <%= tournament_group.user_for_index(i).try(:complete_name) %> <%= tournament_group.user_for_index(i)&.scoring_group_name_for_league_season(@tournament.league_season) %>
                <%= f.input "member_id[#{i}]", as: :hidden, input_html: { :value => tournament_group.user_for_index(i).try(:id), class: "member-id" } %>
              <% else %>
                <span id="user-select-container">
                  <%= f.input "member_id[#{i}]", label: false, collection: @all_league_members, label_method: :complete_name, value_method: :id, tournament_group: tournament_group, selected: tournament_group.user_for_index(i).try(:id), include_blank: true, multiple: true, input_html: { class: 'chosen-select' } %>
                </span>
                <span id="user-hidden"></span>
              <% end %>
            </td>
            <td id="team-select">
              <% if @tournament_day.daily_teams.present? && tournament_group.max_number_of_players != @tournament_day.scorecard_base_scoring_rule.users_per_daily_team %>
                <%= f.input "daily_team_ids[#{i}]", label: false, collection: tournament_group.daily_teams, label_method: :team_number_label, value_method: :id, tournament_group: tournament_group, selected: tournament_group.daily_team_for_user_or_index(tournament_group.user_for_index(i), i).try(:id), include_blank: false, multiple: true, input_html: { class: 'chosen-select' } %>
              <% else %>
                &nbsp;
              <% end %>
            </td>
            <td id="optional-scoring-rules">
              <% if @tournament.optional_scoring_rules.count > 0 -%>
                <%= f.input "optional_scoring_rule_signups[#{i}]", label: "Other Games", collection: @tournament.optional_scoring_rules, label_method: :name, value_method: :id, as: :check_boxes, multiple: true, checked: @tournament_day.optional_scoring_rules_for_user(user: tournament_group.user_for_index(i)).collect { |obj| obj.id }, input_html: { class: "optional-scoring-rule-checkbox" } %>
              <% end -%>
            </td>
            <td id="action-buttons">
              <% unless tournament_group.golfer_outing_for_index(i).blank? %>
                <%= link_to "#{tournament_group.golfer_outing_for_index(i).disqualification_description}", league_tournament_disqualify_day_players_path(@tournament.league, @tournament, @tournament_day, user_id: tournament_group.user_for_index(i)), method: :patch, :role => "button", class: "btn btn-info btn-xs" %>
                <%= link_to "Remove", league_tournament_delete_day_players_path(@tournament.league, @tournament, @tournament_day, group_id: tournament_group.id, user_id: tournament_group.user_for_index(i)), data: { confirm: 'Are you sure you want to remove this registration? This will delete all scorecard information for this golfer for this tournament.' }, method: :delete, :role => "button", class: "btn btn-danger btn-xs" %>
              <% else %>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <% end %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
    <% end %>
  <% end %>

  <style>
    .save-indicator {
      position: fixed;
      bottom: 10px;
      right: 10px;
      width: 100px;
      height: 50px;
      background-color: #00D400;
      border-radius: 8px;
    }
  </style>

  <div class="save-indicator" id="save-indicator">
    <p style="text-align: center; line-height: 50px; color: white;"><strong>Saving...</strong></p>
  </div>

  <script>
    function submitOptionalScoringRules(form) {
      form.trigger('submit.rails');

      $("#save-indicator").fadeIn(400).delay(1600).fadeOut(400);
    }

    $(document).ready(function() {
      $("#save-indicator").fadeOut(0);

      //Player
      $("#user-select .chosen-select").chosen().change(function() {
        $(this.form).trigger('submit.rails');

        $("#save-indicator").fadeIn(400).delay(1600).fadeOut(400);
      });

      //Team
      $("#team-select .chosen-select").chosen().change(function() {
        $(this.form).trigger('submit.rails');

        $("#save-indicator").fadeIn(400).delay(1600).fadeOut(400);
      });

      //Contests
      $("#optional-scoring-rules .optional-scoring-rule-checkbox").change(function() {
        var ruleForm = $(this.form);

        setTimeout(function(){ self.submitOptionalScoringRules(ruleForm) }, 2000); //include a slight delay in case there are multiple contests and they click quickly
      });

      var selectedGolfers = [];
      <% @registered_players.each do |p| %>
        selectedGolfers.push({name: "<%= p.complete_name %>", id: "<%= p.id %>"});
      <% end %>
      removeSelectedGolfersFromDropdowns(selectedGolfers);

      $("#user-select .chosen-container").css({"width": "200px"});
      $("#team-select .chosen-container").css({"width": "200px"});
      $(".search-choice-close").remove();

      $("tbody.connectedSortable").sortable({
        connectWith: ".connectedSortable",
        appendTo: "parent",
        helper: "clone",
        cursor: "move",
        zIndex: 999990,
        receive: function (event, ui) {
          var addedTo = $(this).closest("table.sortable-table");
          var removedFrom = $("table.sortable-table").not(addedTo);

          var players = [];
          var members = $(this).find(".member-id");

          for (var i = 0; i < members.length; i++) {
            var member = members[i];

            players.push(member.value);
          }

          var group = { groupID: addedTo.attr("id"), removedFrom: removedFrom.attr("id"), players: players };

          move_group_output = $.ajax({
            type:     "PATCH",
            url: 			"<%= escape_javascript url_for(league_tournament_move_group_players_path(@league, @tournament, @tournament_day)) %>",
            data:     { group },
            datatype: "json",
            async: true
          });

          $("#save-indicator").fadeIn(400).delay(800).fadeOut(400);
        }
      });
    });
  </script>
</div>
